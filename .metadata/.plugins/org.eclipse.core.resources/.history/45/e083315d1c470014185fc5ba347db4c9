/**
 * @author burcakotlu
 * @date Sep 26, 2014 
 * @time 5:06:55 PM
 */
package keggpathway.ncbigenes;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import ui.GlanetRunner;
import gnu.trove.list.array.TShortArrayList;
import gnu.trove.map.TIntObjectMap;
import gnu.trove.map.TObjectShortMap;

/**
 * 
 */
public class UserDefinedGeneSetUtility {
	
	
	
	public static void createNcbiGeneId2ListofUserDefinedGeneSetNumberMap(
			String userDefinedGeneSetInputFile, 
			TObjectShortMap<String> userDefinedGeneSetName2UserDefinedGeneSetNumberMap,
			TIntObjectMap<TShortArrayList> geneId2ListofUserDefinedGeneSetNumberMap){
		
		String strLine;
		FileReader fileReader = null;
		BufferedReader bufferedReader = null;
		
		int indexofFirstTab 	= -1;
		int indexofSecondTab 	= -1;
		int indexofFirstColon 		= -1;
		int indexofSecondColon 		= -1;
		
		String keggPathwayName;
		String ncbiGeneIdName;
		
		short userDefinedGeneSetNumber;
		int ncbiGeneId;
		
		TShortArrayList existingUserDefinedGeneSetNumberList = null;
		
		try {
			fileReader = new FileReader(userDefinedGeneSetInputFile);
			bufferedReader = new BufferedReader(fileReader);
			
			while((strLine = bufferedReader.readLine())!=null){
				
				//example line
				//path:hsa00010	hsa:10327	reverse

				indexofFirstTab = strLine.indexOf('\t');
				indexofSecondTab = strLine.indexOf('\t',indexofFirstTab+1);
				
				keggPathwayName = strLine.substring(0,indexofFirstTab);
				ncbiGeneIdName = strLine.substring(indexofFirstTab+1,indexofSecondTab);
				
				indexofFirstColon = keggPathwayName.indexOf(':');
				indexofSecondColon = ncbiGeneIdName.indexOf(':');
				
				keggPathwayName = keggPathwayName.substring(indexofFirstColon+1);				
				ncbiGeneId = Integer.parseInt(ncbiGeneIdName.substring(indexofSecondColon+1));
				
				//What if it is null? check this situation
				userDefinedGeneSetNumber = userDefinedGeneSetName2UserDefinedGeneSetNumberMap.get(keggPathwayName);
				
				//fill ncbiGeneId2KeggPathwayHashMap
				//Hash Map does not contain this ncbiGeneId
				if (!geneId2ListofUserDefinedGeneSetNumberMap.containsKey(ncbiGeneId)){					
					TShortArrayList keggPathwayNumberList = new TShortArrayList();
					keggPathwayNumberList.add(userDefinedGeneSetNumber);
					geneId2ListofUserDefinedGeneSetNumberMap.put(ncbiGeneId, keggPathwayNumberList);
					}
				//Hash Map contains this ncbiGeneId
				else{
					existingUserDefinedGeneSetNumberList = geneId2ListofUserDefinedGeneSetNumberMap.get(ncbiGeneId);
					
					if(!(existingUserDefinedGeneSetNumberList.contains(userDefinedGeneSetNumber))){
						existingUserDefinedGeneSetNumberList.add(userDefinedGeneSetNumber);
					} else{
						GlanetRunner.appendLog("More than one same kegg pathway for the same ncbi gene id");
					}
					
					geneId2ListofUserDefinedGeneSetNumberMap.put(ncbiGeneId, existingUserDefinedGeneSetNumberList);
		
				}
			} // End of While
			
			bufferedReader.close();
			fileReader.close();
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
						
		
	}
	

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
