/**
 * 
 */
package jaxbxjctool;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import common.Commons;

/**
 * @author burcakotlu
 *
 */
public class AugmentationofGivenChrNameandIntervals {
	
	
		//Pay Attention
		//Contains X for chrX
		//Contains 1 for chr1
		
		//# Sequence-Name	Sequence-Role	Assigned-Molecule	Assigned-Molecule-Location/Type	GenBank-Accn	Relationship	RefSeq-Accn	Assembly-Unit
		//1	assembled-molecule	1	Chromosome	CM000663.1	=	NC_000001.10	Primary Assembly
		//X	assembled-molecule	X	Chromosome	CM000685.1	=	NC_000023.10	Primary Assembly
		public void fillMap(String refSeqIdsforGRCh37InputFile,Map<String,String> chrName2RefSeqIdforGrch37Map){
			
			FileReader fileReader = null;
			BufferedReader bufferedReader = null;
			
			String strLine = null;
			int numberofChromosomesinHomoSapiens = 24;
			int count = 0;
			
			int indexofFirstTab;
			int indexofSecondTab;
			int indexofThirdTab;
			int indexofFourthTab;
			int indexofFifthTab;
			int indexofSixthTab;
			int indexofSeventhTab;
			
			String chrName;
			String refSeqId;
			
			try {
				fileReader = new FileReader(refSeqIdsforGRCh37InputFile);
				bufferedReader = new BufferedReader(fileReader);
				
				while((strLine = bufferedReader.readLine())!=null){
					if(strLine.startsWith("#")){
						continue;
					}else{
						if (count<numberofChromosomesinHomoSapiens){
							count++;
							
							indexofFirstTab 	= strLine.indexOf('\t');
							indexofSecondTab 	= strLine.indexOf('\t', indexofFirstTab+1);
							indexofThirdTab 	= strLine.indexOf('\t', indexofSecondTab+1);
							indexofFourthTab 	= strLine.indexOf('\t', indexofThirdTab+1);
							indexofFifthTab 	= strLine.indexOf('\t', indexofFourthTab+1);
							indexofSixthTab 	= strLine.indexOf('\t', indexofFifthTab+1);
							indexofSeventhTab 	= strLine.indexOf('\t', indexofSixthTab+1);
							
							chrName = strLine.substring(0, indexofFirstTab);
							refSeqId = strLine.substring(indexofSixthTab+1, indexofSeventhTab);
							
							chrName2RefSeqIdforGrch37Map.put(chrName, refSeqId);
							continue;
							
						}
					}
						
					break;
					
				}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		AugmentationofGivenChrNameandIntervals app=null;
		
		//Example Data
		//7 NC_000007.13
		Map<String,String> chrName2RefSeqIdforGrch37Map = new HashMap<String,String>();
		
		try {
			app = new AugmentationofGivenChrNameandIntervals();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
		//Construct map for refSeq Ids of homo sapiens chromosomes for GRCh37
		String refSeqIdsforGRCh37InputFile = Commons.REFSEQ_IDS_FOR_GRCH37_INPUT_FILE;
		app.fillMap(refSeqIdsforGRCh37InputFile,chrName2RefSeqIdforGrch37Map);
		
        String inputFileName = Commons.OCD_GWAS_SIGNIFICANT_SNPS;
        String outputFileName = Commons.OCD_GWAS_SIGNIFICANT_SNPS_RSIDS_OUTPUT_FILE_NAME;
        
        app.readRsIDInputFileandWriteAugmentedOutputFile(inputFileName,outputFileName,chrName2RefSeqIdforGrch37Map);
        
	}

}
