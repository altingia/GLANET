/**
 * @author burcakotlu
 * @date Aug 25, 2014 
 * @time 3:06:09 PM
 */
package augmentation.results;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import auxiliary.FileOperations;
import common.Commons;
import enumtypes.EnrichmentType;

/**
 * 
 */
public class CreationofAugmentedElementsFilesinGRCh38CoordinatesUsingRemapOutputFiles {
	
	
	public static void 	readTwoFilesandWriteOneFile(String outputFolder, String fileWithCoordinatesiInGRCh37, String remapOutputFile, String fileWithCoordinatesiInGRCh38){
		
		FileReader fileReader1 = null;
		BufferedReader bufferedReader1 = null;
		
		FileReader fileReader2 = null;
		BufferedReader bufferedReader2 = null;
			
		FileWriter fileWriter = null;
		BufferedWriter bufferedWriter = null;
		
		String strLine1;
		String strLine2;
		
		int indexofFirstTab;
		int indexofSecondTab;
		int indexofThirdTab;
		int indexofFourthTab;
		int indexofFifthTab;
		int indexofSixthTab;
		int indexofSeventhTab;
		
		
		String before;
		String after;
					
		try {
			fileReader1 = new FileReader(outputFolder + fileWithCoordinatesiInGRCh37 );
			bufferedReader1 = new BufferedReader(fileReader1);
			
			fileReader2 = new FileReader(outputFolder + remapOutputFile );
			bufferedReader2 = new BufferedReader(fileReader2);
			
			fileWriter = FileOperations.createFileWriter(outputFolder + fileWithCoordinatesiInGRCh38);
			bufferedWriter = new BufferedWriter(fileWriter);
			
			while((strLine1 = bufferedReader1.readLine())!=null){
				if(!strLine1.startsWith("*") && !strLine1.contains("Search")){
					
//					**************	H3K4ME2_HELAS3	**************							
//					H3K4ME2_HELAS3	Searched for chr	interval low	interval high	histone node chrom name	node Low	node high	node HistoneName	node CellLineName	node FileName
//					H3K4ME2_HELAS3	chr9	97713458	97713459	chr9	97712055	97714787	H3K4ME2	HELAS3	wgEncodeBroadHistoneHelas3H3k4me2StdAln.narrowPeak

					
					indexofFirstTab 	= strLine1.indexOf('\t');
					indexofSecondTab 	= strLine1.indexOf('\t',indexofFirstTab+1);
					indexofThirdTab 	= strLine1.indexOf('\t',indexofSecondTab+1);
					indexofFourthTab 	= strLine1.indexOf('\t',indexofThirdTab+1);
					indexofFifthTab 	= strLine1.indexOf('\t',indexofFourthTab+1);
					indexofSixthTab 	= strLine1.indexOf('\t',indexofFifthTab+1);
					indexofSeventhTab 	= strLine1.indexOf('\t',indexofSixthTab+1);
					
					before = strLine1.substring(0, indexofFirstTab);
					bufferedWriter.write(before + "\t");
						
					//Read line from second input file
					strLine2 = bufferedReader2.readLine();
					bufferedWriter.write(strLine2 + "\t");
					
					//Read line from second input file
					strLine2 = bufferedReader2.readLine();
					bufferedWriter.write(strLine2 + "\t");
				
						
					after = strLine1.substring(indexofSeventhTab+1);
					bufferedWriter.write(after + System.getProperty("line.separator"));
					
					
							
					
				}//End of IF
				else{
					bufferedWriter.write(strLine1+ System.getProperty("line.separator"));
				}
			}//End of WHILE
			
			bufferedReader1.close();
			bufferedReader2.close();
			bufferedWriter.close();
			
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	
	public static void readTwoFilesandGenerateANewFile(String outputFolder,EnrichmentType dnaseEnrichment,EnrichmentType histoneEnrichment,EnrichmentType tfEnrichment,EnrichmentType keggPathwayEnrichment,EnrichmentType tfKeggPathwayEnrichment,EnrichmentType tfCellLineKeggPathwayEnrichment){
		if (dnaseEnrichment.isDnaseEnrichment()){
			readTwoFilesandWriteOneFile(outputFolder, Commons.AUGMENTED_DNASE_RESULTS_0BASEDSTART_1BASEDEND_GRCH37_COORDINATES,Commons.REMAP_OUTPUTFILE_AUGMENTED_DNASE_RESULTS_CHRNUMBER_1BASEDSTART_1BASEDEND_GRCH38_COORDINATES,Commons.AUGMENTED_DNASE_RESULTS_1_BASED_GRCH38_COORDINATES);	
		 }
		 
		 if (histoneEnrichment.isHistoneEnrichment()){
			 readTwoFilesandWriteOneFile(outputFolder, Commons.AUGMENTED_HISTONE_RESULTS_0BASEDSTART_1BASEDEND_GRCH37_COORDINATES, Commons.REMAP_OUTPUTFILE_AUGMENTED_HISTONE_RESULTS_CHRNUMBER_1BASEDSTART_1BASEDEND_GRCH38_COORDINATES, Commons.AUGMENTED_HISTONE_RESULTS_1_BASED_GRCH38_COORDINATES);
		 }
		 
		 if (tfEnrichment.isTfEnrichment()){
			 readTwoFilesandWriteOneFile(outputFolder, Commons.AUGMENTED_TF_RESULTS_0BASEDSTART_1BASEDEND_GRCH37_COORDINATES, Commons.REMAP_OUTPUTFILE_AUGMENTED_TF_RESULTS_CHRNUMBER_1BASEDSTART_1BASEDEND_GRCH38_COORDINATES,Commons.AUGMENTED_TF_RESULTS_1_BASED_GRCH38_COORDINATES);	
		 }
		 
		 if (keggPathwayEnrichment.isGeneSetEnrichment()){
			 readTwoFilesandWriteOneFile(outputFolder, Commons.AUGMENTED_EXON_BASED_KEGG_PATHWAY_RESULTS_0BASEDSTART_1BASEDEND_GRCH37_COORDINATES, Commons.REMAP_OUTPUTFILE_AUGMENTED_EXON_BASED_KEGG_PATHWAY_RESULTS_CHRNUMBER_1BASEDSTART_1BASEDEND_GRCH38_COORDINATES,Commons.AUGMENTED_EXON_BASED_KEGG_PATHWAY_RESULTS_1_BASED_GRCH38_COORDINATES);	
			 readTwoFilesandWriteOneFile(outputFolder, Commons.AUGMENTED_REGULATION_BASED_KEGG_PATHWAY_RESULTS_0BASEDSTART_1BASEDEND_GRCH37_COORDINATES, Commons.REMAP_OUTPUTFILE_AUGMENTED_REGULATION_BASED_KEGG_PATHWAY_RESULTS_CHRNUMBER_1BASEDSTART_1BASEDEND_GRCH38_COORDINATES,Commons.AUGMENTED_REGULATION_BASED_KEGG_PATHWAY_RESULTS_1_BASED_GRCH38_COORDINATES);	
			 readTwoFilesandWriteOneFile(outputFolder, Commons.AUGMENTED_ALL_BASED_KEGG_PATHWAY_RESULTS_0BASEDSTART_1BASEDEND_GRCH37_COORDINATES, Commons.REMAP_OUTPUTFILE_AUGMENTED_ALL_BASED_KEGG_PATHWAY_RESULTS_CHRNUMBER_1BASEDSTART_1BASEDEND_GRCH38_COORDINATES,Commons.AUGMENTED_ALL_BASED_KEGG_PATHWAY_RESULTS_1_BASED_GRCH38_COORDINATES);	
		}
		
	     if (tfKeggPathwayEnrichment.isTfGeneSetEnrichment()){	   
			 readTwoFilesandWriteOneFile(outputFolder, Commons.AUGMENTED_TF_EXON_BASED_KEGG_PATHWAY_RESULTS_0BASEDSTART_1BASEDEND_GRCH37_COORDINATES, Commons.REMAP_OUTPUTFILE_AUGMENTED_TF_EXON_BASED_KEGG_PATHWAY_RESULTS_CHRNUMBER_1BASEDSTART_1BASEDEND_GRCH38_COORDINATES,Commons.AUGMENTED_TF_EXON_BASED_KEGG_PATHWAY_RESULTS_1_BASED_GRCH38_COORDINATES);	
			 readTwoFilesandWriteOneFile(outputFolder, Commons.AUGMENTED_TF_REGULATION_BASED_KEGG_PATHWAY_RESULTS_0BASEDSTART_1BASEDEND_GRCH37_COORDINATES, Commons.REMAP_OUTPUTFILE_AUGMENTED_TF_REGULATION_BASED_KEGG_PATHWAY_RESULTS_CHRNUMBER_1BASEDSTART_1BASEDEND_GRCH38_COORDINATES,Commons.AUGMENTED_TF_REGULATION_BASED_KEGG_PATHWAY_RESULTS_1_BASED_GRCH38_COORDINATES);	
			 readTwoFilesandWriteOneFile(outputFolder, Commons.AUGMENTED_TF_ALL_BASED_KEGG_PATHWAY_RESULTS_0BASEDSTART_1BASEDEND_GRCH37_COORDINATES, Commons.REMAP_OUTPUTFILE_AUGMENTED_TF_ALL_BASED_KEGG_PATHWAY_RESULTS_CHRNUMBER_1BASEDSTART_1BASEDEND_GRCH38_COORDINATES,Commons.AUGMENTED_TF_ALL_BASED_KEGG_PATHWAY_RESULTS_1_BASED_GRCH38_COORDINATES);	
	     }
		
	     if (tfCellLineKeggPathwayEnrichment.isTfCellLineGeneSetEnrichment()){
			 readTwoFilesandWriteOneFile(outputFolder, Commons.AUGMENTED_TF_CELLLINE_EXON_BASED_KEGG_PATHWAY_RESULTS_0BASEDSTART_1BASEDEND_GRCH37_COORDINATES, Commons.REMAP_OUTPUTFILE_AUGMENTED_TF_CELLLINE_EXON_BASED_KEGG_PATHWAY_RESULTS_CHRNUMBER_1BASEDSTART_1BASEDEND_GRCH38_COORDINATES,Commons.AUGMENTED_TF_CELLLINE_EXON_BASED_KEGG_PATHWAY_RESULTS_1_BASED_GRCH38_COORDINATES);	
			 readTwoFilesandWriteOneFile(outputFolder, Commons.AUGMENTED_TF_CELLLINE_REGULATION_BASED_KEGG_PATHWAY_RESULTS_0BASEDSTART_1BASEDEND_GRCH37_COORDINATES, Commons.REMAP_OUTPUTFILE_AUGMENTED_TF_CELLLINE_REGULATION_BASED_KEGG_PATHWAY_RESULTS_CHRNUMBER_1BASEDSTART_1BASEDEND_GRCH38_COORDINATES,Commons.AUGMENTED_TF_CELLLINE_REGULATION_BASED_KEGG_PATHWAY_RESULTS_1_BASED_GRCH38_COORDINATES);	
			 readTwoFilesandWriteOneFile(outputFolder, Commons.AUGMENTED_TF_CELLLINE_ALL_BASED_KEGG_PATHWAY_RESULTS_0BASEDSTART_1BASEDEND_GRCH37_COORDINATES, Commons.REMAP_OUTPUTFILE_AUGMENTED_TF_CELLLINE_ALL_BASED_KEGG_PATHWAY_RESULTS_CHRNUMBER_1BASEDSTART_1BASEDEND_GRCH38_COORDINATES,Commons.AUGMENTED_TF_CELLLINE_ALL_BASED_KEGG_PATHWAY_RESULTS_1_BASED_GRCH38_COORDINATES);	

	     }
	}


	/**
	 * @param args
	 */
	public static void main(String[] args) {
		
		String glanetFolder = args[1];
		String outputFolder = glanetFolder + System.getProperty("file.separator") + Commons.OUTPUT + System.getProperty("file.separator") ;
		
		EnrichmentType dnaseEnrichment 		= EnrichmentType.convertStringtoEnum(args[10]);
		EnrichmentType histoneEnrichment  	= EnrichmentType.convertStringtoEnum(args[11]);
		EnrichmentType tfEnrichment 		= EnrichmentType.convertStringtoEnum(args[12]);
		EnrichmentType keggPathwayEnrichment  			= EnrichmentType.convertStringtoEnum(args[13]);
		EnrichmentType tfKeggPathwayEnrichment 			= EnrichmentType.convertStringtoEnum(args[14]);
		EnrichmentType tfCellLineKeggPathwayEnrichment 	= EnrichmentType.convertStringtoEnum(args[15]);

	
		
		CreationofAugmentedElementsFilesinGRCh38CoordinatesUsingRemapOutputFiles.readTwoFilesandGenerateANewFile(outputFolder,dnaseEnrichment,histoneEnrichment,tfEnrichment,keggPathwayEnrichment,tfKeggPathwayEnrichment,tfCellLineKeggPathwayEnrichment);

	}

}
